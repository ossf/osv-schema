// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: vulnerability.proto

package osvschema

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The repository type.
type Commit_RepoType int32

const (
	Commit_UNSPECIFIED Commit_RepoType = 0
	Commit_GIT         Commit_RepoType = 1
)

// Enum value maps for Commit_RepoType.
var (
	Commit_RepoType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "GIT",
	}
	Commit_RepoType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"GIT":         1,
	}
)

func (x Commit_RepoType) Enum() *Commit_RepoType {
	p := new(Commit_RepoType)
	*p = x
	return p
}

func (x Commit_RepoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Commit_RepoType) Descriptor() protoreflect.EnumDescriptor {
	return file_vulnerability_proto_enumTypes[0].Descriptor()
}

func (Commit_RepoType) Type() protoreflect.EnumType {
	return &file_vulnerability_proto_enumTypes[0]
}

func (x Commit_RepoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Commit_RepoType.Descriptor instead.
func (Commit_RepoType) EnumDescriptor() ([]byte, []int) {
	return file_vulnerability_proto_rawDescGZIP(), []int{0, 0}
}

// Type of the version information.
type Range_Type int32

const (
	Range_UNSPECIFIED Range_Type = 0
	Range_GIT         Range_Type = 1
	Range_SEMVER      Range_Type = 2
	Range_ECOSYSTEM   Range_Type = 3
)

// Enum value maps for Range_Type.
var (
	Range_Type_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "GIT",
		2: "SEMVER",
		3: "ECOSYSTEM",
	}
	Range_Type_value = map[string]int32{
		"UNSPECIFIED": 0,
		"GIT":         1,
		"SEMVER":      2,
		"ECOSYSTEM":   3,
	}
)

func (x Range_Type) Enum() *Range_Type {
	p := new(Range_Type)
	*p = x
	return p
}

func (x Range_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Range_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_vulnerability_proto_enumTypes[1].Descriptor()
}

func (Range_Type) Type() protoreflect.EnumType {
	return &file_vulnerability_proto_enumTypes[1]
}

func (x Range_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Range_Type.Descriptor instead.
func (Range_Type) EnumDescriptor() ([]byte, []int) {
	return file_vulnerability_proto_rawDescGZIP(), []int{3, 0}
}

// Type of the severity.
type Severity_Type int32

const (
	Severity_UNSPECIFIED Severity_Type = 0
	Severity_CVSS_V3     Severity_Type = 1
	Severity_CVSS_V2     Severity_Type = 2
	Severity_CVSS_V4     Severity_Type = 3
	Severity_Ubuntu      Severity_Type = 4
)

// Enum value maps for Severity_Type.
var (
	Severity_Type_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "CVSS_V3",
		2: "CVSS_V2",
		3: "CVSS_V4",
		4: "Ubuntu",
	}
	Severity_Type_value = map[string]int32{
		"UNSPECIFIED": 0,
		"CVSS_V3":     1,
		"CVSS_V2":     2,
		"CVSS_V4":     3,
		"Ubuntu":      4,
	}
)

func (x Severity_Type) Enum() *Severity_Type {
	p := new(Severity_Type)
	*p = x
	return p
}

func (x Severity_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_vulnerability_proto_enumTypes[2].Descriptor()
}

func (Severity_Type) Type() protoreflect.EnumType {
	return &file_vulnerability_proto_enumTypes[2]
}

func (x Severity_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity_Type.Descriptor instead.
func (Severity_Type) EnumDescriptor() ([]byte, []int) {
	return file_vulnerability_proto_rawDescGZIP(), []int{5, 0}
}

type Credit_Type int32

const (
	Credit_UNSPECIFIED           Credit_Type = 0
	Credit_OTHER                 Credit_Type = 1
	Credit_FINDER                Credit_Type = 2
	Credit_REPORTER              Credit_Type = 3
	Credit_ANALYST               Credit_Type = 4
	Credit_COORDINATOR           Credit_Type = 5
	Credit_REMEDIATION_DEVELOPER Credit_Type = 6
	Credit_REMEDIATION_REVIEWER  Credit_Type = 7
	Credit_REMEDIATION_VERIFIER  Credit_Type = 8
	Credit_TOOL                  Credit_Type = 9
	Credit_SPONSOR               Credit_Type = 10
)

// Enum value maps for Credit_Type.
var (
	Credit_Type_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "OTHER",
		2:  "FINDER",
		3:  "REPORTER",
		4:  "ANALYST",
		5:  "COORDINATOR",
		6:  "REMEDIATION_DEVELOPER",
		7:  "REMEDIATION_REVIEWER",
		8:  "REMEDIATION_VERIFIER",
		9:  "TOOL",
		10: "SPONSOR",
	}
	Credit_Type_value = map[string]int32{
		"UNSPECIFIED":           0,
		"OTHER":                 1,
		"FINDER":                2,
		"REPORTER":              3,
		"ANALYST":               4,
		"COORDINATOR":           5,
		"REMEDIATION_DEVELOPER": 6,
		"REMEDIATION_REVIEWER":  7,
		"REMEDIATION_VERIFIER":  8,
		"TOOL":                  9,
		"SPONSOR":               10,
	}
)

func (x Credit_Type) Enum() *Credit_Type {
	p := new(Credit_Type)
	*p = x
	return p
}

func (x Credit_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Credit_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_vulnerability_proto_enumTypes[3].Descriptor()
}

func (Credit_Type) Type() protoreflect.EnumType {
	return &file_vulnerability_proto_enumTypes[3]
}

func (x Credit_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Credit_Type.Descriptor instead.
func (Credit_Type) EnumDescriptor() ([]byte, []int) {
	return file_vulnerability_proto_rawDescGZIP(), []int{6, 0}
}

type Reference_Type int32

const (
	// Next ID = 11.
	Reference_NONE       Reference_Type = 0
	Reference_ADVISORY   Reference_Type = 2
	Reference_ARTICLE    Reference_Type = 6
	Reference_DETECTION  Reference_Type = 9
	Reference_DISCUSSION Reference_Type = 8
	Reference_EVIDENCE   Reference_Type = 7
	Reference_FIX        Reference_Type = 4
	Reference_INTRODUCED Reference_Type = 10
	Reference_PACKAGE    Reference_Type = 5
	Reference_REPORT     Reference_Type = 3
	Reference_WEB        Reference_Type = 1
)

// Enum value maps for Reference_Type.
var (
	Reference_Type_name = map[int32]string{
		0:  "NONE",
		2:  "ADVISORY",
		6:  "ARTICLE",
		9:  "DETECTION",
		8:  "DISCUSSION",
		7:  "EVIDENCE",
		4:  "FIX",
		10: "INTRODUCED",
		5:  "PACKAGE",
		3:  "REPORT",
		1:  "WEB",
	}
	Reference_Type_value = map[string]int32{
		"NONE":       0,
		"ADVISORY":   2,
		"ARTICLE":    6,
		"DETECTION":  9,
		"DISCUSSION": 8,
		"EVIDENCE":   7,
		"FIX":        4,
		"INTRODUCED": 10,
		"PACKAGE":    5,
		"REPORT":     3,
		"WEB":        1,
	}
)

func (x Reference_Type) Enum() *Reference_Type {
	p := new(Reference_Type)
	*p = x
	return p
}

func (x Reference_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Reference_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_vulnerability_proto_enumTypes[4].Descriptor()
}

func (Reference_Type) Type() protoreflect.EnumType {
	return &file_vulnerability_proto_enumTypes[4]
}

func (x Reference_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Reference_Type.Descriptor instead.
func (Reference_Type) EnumDescriptor() ([]byte, []int) {
	return file_vulnerability_proto_rawDescGZIP(), []int{7, 0}
}

// Commit reference.
//
// In some rare cases, this may refer to a small range of commits rather than an
// exact commit (to accomodate for automated systems). In such cases, the
// semantics are as follows:
//
// - If this is referring to a commit which introduces a vulnerability, then
// *any* commits in the range is assumed to cause the vulnerability.
//
// - If this is referring to a commit which fixes a vulnerability, then *all*
// commits in the range is assumed to cause the vulnerability.
type Commit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The type of the repo.
	RepoType Commit_RepoType `protobuf:"varint,1,opt,name=repo_type,json=repoType,proto3,enum=osv.Commit_RepoType" json:"repo_type,omitempty"`
	// Required. The publicly accessible URL of the repo that can be directly
	// passed to clone commands.
	RepoUrl string `protobuf:"bytes,2,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"`
	// Required. The commit identifier (e.g. git SHA). In some cases where the
	// exact commit fails to be determined by automation, this may be a small
	// range in the form "A:B" which means the commit range from A (exclusive) to
	// B (inclusive).
	Commit        string `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Commit) Reset() {
	*x = Commit{}
	mi := &file_vulnerability_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_vulnerability_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_vulnerability_proto_rawDescGZIP(), []int{0}
}

func (x *Commit) GetRepoType() Commit_RepoType {
	if x != nil {
		return x.RepoType
	}
	return Commit_UNSPECIFIED
}

func (x *Commit) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *Commit) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

// Package information and version.
type Package struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Name of the package. Should match the name used in the package
	// ecosystem (e.g. the npm package name). For C/C++ projects integrated in
	// OSS-Fuzz, this is the name used for the integration.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The ecosystem for this package.
	// For the complete list of valid ecosystem names, see
	// <https://ossf.github.io/osv-schema/#affectedpackage-field>.
	Ecosystem string `protobuf:"bytes,2,opt,name=ecosystem,proto3" json:"ecosystem,omitempty"`
	// Optional. The package URL for this package.
	Purl          string `protobuf:"bytes,3,opt,name=purl,proto3" json:"purl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Package) Reset() {
	*x = Package{}
	mi := &file_vulnerability_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_vulnerability_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_vulnerability_proto_rawDescGZIP(), []int{1}
}

func (x *Package) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Package) GetEcosystem() string {
	if x != nil {
		return x.Ecosystem
	}
	return ""
}

func (x *Package) GetPurl() string {
	if x != nil {
		return x.Purl
	}
	return ""
}

// Version events.
type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The earliest version/commit where this vulnerability
	// was introduced in.
	Introduced string `protobuf:"bytes,1,opt,name=introduced,proto3" json:"introduced,omitempty"`
	// The version/commit that this vulnerability was fixed in.
	Fixed string `protobuf:"bytes,2,opt,name=fixed,proto3" json:"fixed,omitempty"`
	// The limit to apply to the range.
	Limit string `protobuf:"bytes,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// The last affected version.
	LastAffected  string `protobuf:"bytes,4,opt,name=last_affected,json=lastAffected,proto3" json:"last_affected,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_vulnerability_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_vulnerability_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_vulnerability_proto_rawDescGZIP(), []int{2}
}

func (x *Event) GetIntroduced() string {
	if x != nil {
		return x.Introduced
	}
	return ""
}

func (x *Event) GetFixed() string {
	if x != nil {
		return x.Fixed
	}
	return ""
}

func (x *Event) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *Event) GetLastAffected() string {
	if x != nil {
		return x.LastAffected
	}
	return ""
}

// Affected ranges.
type Range struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The type of version information.
	Type Range_Type `protobuf:"varint,1,opt,name=type,proto3,enum=osv.Range_Type" json:"type,omitempty"`
	// Required if type is GIT. The publicly accessible URL of the repo that can
	// be directly passed to clone commands.
	Repo string `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	// Required. Version event information.
	Events        []*Event `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Range) Reset() {
	*x = Range{}
	mi := &file_vulnerability_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_vulnerability_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_vulnerability_proto_rawDescGZIP(), []int{3}
}

func (x *Range) GetType() Range_Type {
	if x != nil {
		return x.Type
	}
	return Range_UNSPECIFIED
}

func (x *Range) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *Range) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

// Affected versions and commits.
type Affected struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Package information.
	Package *Package `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	// Required. Range information.
	Ranges []*Range `protobuf:"bytes,2,rep,name=ranges,proto3" json:"ranges,omitempty"`
	// Optional. List of affected versions.
	Versions []string `protobuf:"bytes,3,rep,name=versions,proto3" json:"versions,omitempty"`
	// Optional. JSON object holding additional information about the
	// vulnerability as defined by the ecosystem for which the record applies.
	EcosystemSpecific *structpb.Struct `protobuf:"bytes,4,opt,name=ecosystem_specific,json=ecosystemSpecific,proto3" json:"ecosystem_specific,omitempty"`
	// Optional. JSON object holding additional information about the
	// vulnerability as defined by the database for which the record applies.
	DatabaseSpecific *structpb.Struct `protobuf:"bytes,5,opt,name=database_specific,json=databaseSpecific,proto3" json:"database_specific,omitempty"`
	// Optional. Severity of the vulnerability for this package.
	Severity      []*Severity `protobuf:"bytes,6,rep,name=severity,proto3" json:"severity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Affected) Reset() {
	*x = Affected{}
	mi := &file_vulnerability_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Affected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Affected) ProtoMessage() {}

func (x *Affected) ProtoReflect() protoreflect.Message {
	mi := &file_vulnerability_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Affected.ProtoReflect.Descriptor instead.
func (*Affected) Descriptor() ([]byte, []int) {
	return file_vulnerability_proto_rawDescGZIP(), []int{4}
}

func (x *Affected) GetPackage() *Package {
	if x != nil {
		return x.Package
	}
	return nil
}

func (x *Affected) GetRanges() []*Range {
	if x != nil {
		return x.Ranges
	}
	return nil
}

func (x *Affected) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *Affected) GetEcosystemSpecific() *structpb.Struct {
	if x != nil {
		return x.EcosystemSpecific
	}
	return nil
}

func (x *Affected) GetDatabaseSpecific() *structpb.Struct {
	if x != nil {
		return x.DatabaseSpecific
	}
	return nil
}

func (x *Affected) GetSeverity() []*Severity {
	if x != nil {
		return x.Severity
	}
	return nil
}

type Severity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of this severity entry.
	Type Severity_Type `protobuf:"varint,1,opt,name=type,proto3,enum=osv.Severity_Type" json:"type,omitempty"`
	// The quantitative score.
	Score         string `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Severity) Reset() {
	*x = Severity{}
	mi := &file_vulnerability_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Severity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Severity) ProtoMessage() {}

func (x *Severity) ProtoReflect() protoreflect.Message {
	mi := &file_vulnerability_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Severity.ProtoReflect.Descriptor instead.
func (*Severity) Descriptor() ([]byte, []int) {
	return file_vulnerability_proto_rawDescGZIP(), []int{5}
}

func (x *Severity) GetType() Severity_Type {
	if x != nil {
		return x.Type
	}
	return Severity_UNSPECIFIED
}

func (x *Severity) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

type Credit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name to give credit to.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Contact methods (URLs).
	Contact []string `protobuf:"bytes,2,rep,name=contact,proto3" json:"contact,omitempty"`
	// Optional. The type or role of the individual or entity being credited.
	Type          Credit_Type `protobuf:"varint,3,opt,name=type,proto3,enum=osv.Credit_Type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Credit) Reset() {
	*x = Credit{}
	mi := &file_vulnerability_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Credit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credit) ProtoMessage() {}

func (x *Credit) ProtoReflect() protoreflect.Message {
	mi := &file_vulnerability_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credit.ProtoReflect.Descriptor instead.
func (*Credit) Descriptor() ([]byte, []int) {
	return file_vulnerability_proto_rawDescGZIP(), []int{6}
}

func (x *Credit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Credit) GetContact() []string {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *Credit) GetType() Credit_Type {
	if x != nil {
		return x.Type
	}
	return Credit_UNSPECIFIED
}

// Reference URL.
type Reference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The type of the reference.
	Type Reference_Type `protobuf:"varint,1,opt,name=type,proto3,enum=osv.Reference_Type" json:"type,omitempty"`
	// Required. The URL.
	Url           string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reference) Reset() {
	*x = Reference{}
	mi := &file_vulnerability_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reference) ProtoMessage() {}

func (x *Reference) ProtoReflect() protoreflect.Message {
	mi := &file_vulnerability_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reference.ProtoReflect.Descriptor instead.
func (*Reference) Descriptor() ([]byte, []int) {
	return file_vulnerability_proto_rawDescGZIP(), []int{7}
}

func (x *Reference) GetType() Reference_Type {
	if x != nil {
		return x.Type
	}
	return Reference_NONE
}

func (x *Reference) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// A vulnerability entry.
// The protobuf representation is *NOT* stable and only used for implementing
// the JSON based API.
type Vulnerability struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The OSV schema version.
	SchemaVersion string `protobuf:"bytes,18,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	// The `id` field is a unique identifier for the vulnerability entry. It is a
	// string of the format `<DB>-<ENTRYID>`, where `DB` names the database and
	// `ENTRYID` is in the format used by the database. For example:
	// “OSV-2020-111”, “CVE-2021-3114”, or “GHSA-vp9c-fpxx-744v”.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The RFC3339 timestamp indicating when this entry was published.
	Published *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=published,proto3" json:"published,omitempty"`
	// The RFC3339 timestamp indicating when this entry was last modified.
	Modified *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=modified,proto3" json:"modified,omitempty"`
	// Optional. The RFC3339 timestamp indicating when this entry is considered to
	// be withdrawn.
	Withdrawn *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=withdrawn,proto3" json:"withdrawn,omitempty"`
	// Optional. IDs for the same vulnerability in other databases.
	Aliases []string `protobuf:"bytes,8,rep,name=aliases,proto3" json:"aliases,omitempty"`
	// Optional. List of IDs of closely related vulnerabilities, such as the same
	// problem in alternate ecosystems.
	Related []string `protobuf:"bytes,13,rep,name=related,proto3" json:"related,omitempty"`
	// Optional. List of IDs of upstream vulnerabilities of a vulnerability.
	Upstream []string `protobuf:"bytes,14,rep,name=upstream,proto3" json:"upstream,omitempty"`
	// Required. One line human readable summary for the vulnerability. It is
	// recommended to keep this under 120 characters.
	Summary string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	// Required. Any additional human readable details for the vulnerability.
	Details string `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	// Required. Affected commit ranges and versions.
	Affected []*Affected `protobuf:"bytes,17,rep,name=affected,proto3" json:"affected,omitempty"`
	// Optional. URLs to more information/advisories (including the
	// scheme e.g "https://").
	References []*Reference `protobuf:"bytes,16,rep,name=references,proto3" json:"references,omitempty"`
	// Optional. JSON object holding additional information about the
	// vulnerability as defined by the database for which the record applies.
	DatabaseSpecific *structpb.Struct `protobuf:"bytes,15,opt,name=database_specific,json=databaseSpecific,proto3" json:"database_specific,omitempty"`
	// Optional. Severity of the vulnerability.
	Severity []*Severity `protobuf:"bytes,19,rep,name=severity,proto3" json:"severity,omitempty"`
	// Optional. Credits for the vulnerability.
	Credits       []*Credit `protobuf:"bytes,20,rep,name=credits,proto3" json:"credits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vulnerability) Reset() {
	*x = Vulnerability{}
	mi := &file_vulnerability_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vulnerability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vulnerability) ProtoMessage() {}

func (x *Vulnerability) ProtoReflect() protoreflect.Message {
	mi := &file_vulnerability_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vulnerability.ProtoReflect.Descriptor instead.
func (*Vulnerability) Descriptor() ([]byte, []int) {
	return file_vulnerability_proto_rawDescGZIP(), []int{8}
}

func (x *Vulnerability) GetSchemaVersion() string {
	if x != nil {
		return x.SchemaVersion
	}
	return ""
}

func (x *Vulnerability) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vulnerability) GetPublished() *timestamppb.Timestamp {
	if x != nil {
		return x.Published
	}
	return nil
}

func (x *Vulnerability) GetModified() *timestamppb.Timestamp {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *Vulnerability) GetWithdrawn() *timestamppb.Timestamp {
	if x != nil {
		return x.Withdrawn
	}
	return nil
}

func (x *Vulnerability) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *Vulnerability) GetRelated() []string {
	if x != nil {
		return x.Related
	}
	return nil
}

func (x *Vulnerability) GetUpstream() []string {
	if x != nil {
		return x.Upstream
	}
	return nil
}

func (x *Vulnerability) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Vulnerability) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *Vulnerability) GetAffected() []*Affected {
	if x != nil {
		return x.Affected
	}
	return nil
}

func (x *Vulnerability) GetReferences() []*Reference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *Vulnerability) GetDatabaseSpecific() *structpb.Struct {
	if x != nil {
		return x.DatabaseSpecific
	}
	return nil
}

func (x *Vulnerability) GetSeverity() []*Severity {
	if x != nil {
		return x.Severity
	}
	return nil
}

func (x *Vulnerability) GetCredits() []*Credit {
	if x != nil {
		return x.Credits
	}
	return nil
}

var File_vulnerability_proto protoreflect.FileDescriptor

const file_vulnerability_proto_rawDesc = "" +
	"\n" +
	"\x13vulnerability.proto\x12\x03osv\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x94\x01\n" +
	"\x06Commit\x121\n" +
	"\trepo_type\x18\x01 \x01(\x0e2\x14.osv.Commit.RepoTypeR\brepoType\x12\x19\n" +
	"\brepo_url\x18\x02 \x01(\tR\arepoUrl\x12\x16\n" +
	"\x06commit\x18\x03 \x01(\tR\x06commit\"$\n" +
	"\bRepoType\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\a\n" +
	"\x03GIT\x10\x01\"O\n" +
	"\aPackage\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tecosystem\x18\x02 \x01(\tR\tecosystem\x12\x12\n" +
	"\x04purl\x18\x03 \x01(\tR\x04purl\"x\n" +
	"\x05Event\x12\x1e\n" +
	"\n" +
	"introduced\x18\x01 \x01(\tR\n" +
	"introduced\x12\x14\n" +
	"\x05fixed\x18\x02 \x01(\tR\x05fixed\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\tR\x05limit\x12#\n" +
	"\rlast_affected\x18\x04 \x01(\tR\flastAffected\"\xa1\x01\n" +
	"\x05Range\x12#\n" +
	"\x04type\x18\x01 \x01(\x0e2\x0f.osv.Range.TypeR\x04type\x12\x12\n" +
	"\x04repo\x18\x02 \x01(\tR\x04repo\x12\"\n" +
	"\x06events\x18\x03 \x03(\v2\n" +
	".osv.EventR\x06events\";\n" +
	"\x04Type\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\a\n" +
	"\x03GIT\x10\x01\x12\n" +
	"\n" +
	"\x06SEMVER\x10\x02\x12\r\n" +
	"\tECOSYSTEM\x10\x03\"\xab\x02\n" +
	"\bAffected\x12&\n" +
	"\apackage\x18\x01 \x01(\v2\f.osv.PackageR\apackage\x12\"\n" +
	"\x06ranges\x18\x02 \x03(\v2\n" +
	".osv.RangeR\x06ranges\x12\x1a\n" +
	"\bversions\x18\x03 \x03(\tR\bversions\x12F\n" +
	"\x12ecosystem_specific\x18\x04 \x01(\v2\x17.google.protobuf.StructR\x11ecosystemSpecific\x12D\n" +
	"\x11database_specific\x18\x05 \x01(\v2\x17.google.protobuf.StructR\x10databaseSpecific\x12)\n" +
	"\bseverity\x18\x06 \x03(\v2\r.osv.SeverityR\bseverity\"\x94\x01\n" +
	"\bSeverity\x12&\n" +
	"\x04type\x18\x01 \x01(\x0e2\x12.osv.Severity.TypeR\x04type\x12\x14\n" +
	"\x05score\x18\x02 \x01(\tR\x05score\"J\n" +
	"\x04Type\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\v\n" +
	"\aCVSS_V3\x10\x01\x12\v\n" +
	"\aCVSS_V2\x10\x02\x12\v\n" +
	"\aCVSS_V4\x10\x03\x12\n" +
	"\n" +
	"\x06Ubuntu\x10\x04\"\x9f\x02\n" +
	"\x06Credit\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\acontact\x18\x02 \x03(\tR\acontact\x12$\n" +
	"\x04type\x18\x03 \x01(\x0e2\x10.osv.Credit.TypeR\x04type\"\xc0\x01\n" +
	"\x04Type\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\t\n" +
	"\x05OTHER\x10\x01\x12\n" +
	"\n" +
	"\x06FINDER\x10\x02\x12\f\n" +
	"\bREPORTER\x10\x03\x12\v\n" +
	"\aANALYST\x10\x04\x12\x0f\n" +
	"\vCOORDINATOR\x10\x05\x12\x19\n" +
	"\x15REMEDIATION_DEVELOPER\x10\x06\x12\x18\n" +
	"\x14REMEDIATION_REVIEWER\x10\a\x12\x18\n" +
	"\x14REMEDIATION_VERIFIER\x10\b\x12\b\n" +
	"\x04TOOL\x10\t\x12\v\n" +
	"\aSPONSOR\x10\n" +
	"\"\xdc\x01\n" +
	"\tReference\x12'\n" +
	"\x04type\x18\x01 \x01(\x0e2\x13.osv.Reference.TypeR\x04type\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"\x93\x01\n" +
	"\x04Type\x12\b\n" +
	"\x04NONE\x10\x00\x12\f\n" +
	"\bADVISORY\x10\x02\x12\v\n" +
	"\aARTICLE\x10\x06\x12\r\n" +
	"\tDETECTION\x10\t\x12\x0e\n" +
	"\n" +
	"DISCUSSION\x10\b\x12\f\n" +
	"\bEVIDENCE\x10\a\x12\a\n" +
	"\x03FIX\x10\x04\x12\x0e\n" +
	"\n" +
	"INTRODUCED\x10\n" +
	"\x12\v\n" +
	"\aPACKAGE\x10\x05\x12\n" +
	"\n" +
	"\x06REPORT\x10\x03\x12\a\n" +
	"\x03WEB\x10\x01\"\xe9\x04\n" +
	"\rVulnerability\x12%\n" +
	"\x0eschema_version\x18\x12 \x01(\tR\rschemaVersion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\tpublished\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tpublished\x126\n" +
	"\bmodified\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\bmodified\x128\n" +
	"\twithdrawn\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\twithdrawn\x12\x18\n" +
	"\aaliases\x18\b \x03(\tR\aaliases\x12\x18\n" +
	"\arelated\x18\r \x03(\tR\arelated\x12\x1a\n" +
	"\bupstream\x18\x0e \x03(\tR\bupstream\x12\x18\n" +
	"\asummary\x18\x03 \x01(\tR\asummary\x12\x18\n" +
	"\adetails\x18\x04 \x01(\tR\adetails\x12)\n" +
	"\baffected\x18\x11 \x03(\v2\r.osv.AffectedR\baffected\x12.\n" +
	"\n" +
	"references\x18\x10 \x03(\v2\x0e.osv.ReferenceR\n" +
	"references\x12D\n" +
	"\x11database_specific\x18\x0f \x01(\v2\x17.google.protobuf.StructR\x10databaseSpecific\x12)\n" +
	"\bseverity\x18\x13 \x03(\v2\r.osv.SeverityR\bseverity\x12%\n" +
	"\acredits\x18\x14 \x03(\v2\v.osv.CreditR\acreditsB2Z0github.com/ossf/osv-schema/bindings/go/osvschemab\x06proto3"

var (
	file_vulnerability_proto_rawDescOnce sync.Once
	file_vulnerability_proto_rawDescData []byte
)

func file_vulnerability_proto_rawDescGZIP() []byte {
	file_vulnerability_proto_rawDescOnce.Do(func() {
		file_vulnerability_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vulnerability_proto_rawDesc), len(file_vulnerability_proto_rawDesc)))
	})
	return file_vulnerability_proto_rawDescData
}

var file_vulnerability_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_vulnerability_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_vulnerability_proto_goTypes = []any{
	(Commit_RepoType)(0),          // 0: osv.Commit.RepoType
	(Range_Type)(0),               // 1: osv.Range.Type
	(Severity_Type)(0),            // 2: osv.Severity.Type
	(Credit_Type)(0),              // 3: osv.Credit.Type
	(Reference_Type)(0),           // 4: osv.Reference.Type
	(*Commit)(nil),                // 5: osv.Commit
	(*Package)(nil),               // 6: osv.Package
	(*Event)(nil),                 // 7: osv.Event
	(*Range)(nil),                 // 8: osv.Range
	(*Affected)(nil),              // 9: osv.Affected
	(*Severity)(nil),              // 10: osv.Severity
	(*Credit)(nil),                // 11: osv.Credit
	(*Reference)(nil),             // 12: osv.Reference
	(*Vulnerability)(nil),         // 13: osv.Vulnerability
	(*structpb.Struct)(nil),       // 14: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 15: google.protobuf.Timestamp
}
var file_vulnerability_proto_depIdxs = []int32{
	0,  // 0: osv.Commit.repo_type:type_name -> osv.Commit.RepoType
	1,  // 1: osv.Range.type:type_name -> osv.Range.Type
	7,  // 2: osv.Range.events:type_name -> osv.Event
	6,  // 3: osv.Affected.package:type_name -> osv.Package
	8,  // 4: osv.Affected.ranges:type_name -> osv.Range
	14, // 5: osv.Affected.ecosystem_specific:type_name -> google.protobuf.Struct
	14, // 6: osv.Affected.database_specific:type_name -> google.protobuf.Struct
	10, // 7: osv.Affected.severity:type_name -> osv.Severity
	2,  // 8: osv.Severity.type:type_name -> osv.Severity.Type
	3,  // 9: osv.Credit.type:type_name -> osv.Credit.Type
	4,  // 10: osv.Reference.type:type_name -> osv.Reference.Type
	15, // 11: osv.Vulnerability.published:type_name -> google.protobuf.Timestamp
	15, // 12: osv.Vulnerability.modified:type_name -> google.protobuf.Timestamp
	15, // 13: osv.Vulnerability.withdrawn:type_name -> google.protobuf.Timestamp
	9,  // 14: osv.Vulnerability.affected:type_name -> osv.Affected
	12, // 15: osv.Vulnerability.references:type_name -> osv.Reference
	14, // 16: osv.Vulnerability.database_specific:type_name -> google.protobuf.Struct
	10, // 17: osv.Vulnerability.severity:type_name -> osv.Severity
	11, // 18: osv.Vulnerability.credits:type_name -> osv.Credit
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_vulnerability_proto_init() }
func file_vulnerability_proto_init() {
	if File_vulnerability_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vulnerability_proto_rawDesc), len(file_vulnerability_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vulnerability_proto_goTypes,
		DependencyIndexes: file_vulnerability_proto_depIdxs,
		EnumInfos:         file_vulnerability_proto_enumTypes,
		MessageInfos:      file_vulnerability_proto_msgTypes,
	}.Build()
	File_vulnerability_proto = out.File
	file_vulnerability_proto_goTypes = nil
	file_vulnerability_proto_depIdxs = nil
}
